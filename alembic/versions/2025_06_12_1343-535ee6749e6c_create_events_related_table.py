"""create events related table

Revision ID: 535ee6749e6c
Revises: 77d9d82648ee
Create Date: 2025-06-12 13:43:18.919584

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "535ee6749e6c"
down_revision: str | None = "77d9d82648ee"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "events",
        sa.Column("event_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("event_date", sa.Date(), nullable=False),
        sa.Column("event_time", sa.Time(), nullable=False),
        sa.Column("sale_time", sa.DateTime(), nullable=False),
        sa.Column("sale_end_time", sa.DateTime(), nullable=True),
        sa.Column("location", sa.String(length=255), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("organizer", sa.String(length=255), nullable=False),
        sa.Column("on_sale", sa.Boolean(), nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("event_id"),
    )
    op.create_table(
        "event_pictures",
        sa.Column("picture_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("picture_url", sa.String(length=255), nullable=True),
        sa.Column("picture_file_name", sa.String(length=255), nullable=True),
        sa.Column("picture_order", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["events.event_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("picture_id"),
    )
    op.create_table(
        "event_ticket_types",
        sa.Column("ticket_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("ticket_name", sa.String(length=100), nullable=False),
        sa.Column("max_purchase_limit", sa.Integer(), nullable=True),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("stock", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["event_id"], ["events.event_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("ticket_type_id"),
    )
    op.add_column("users", sa.Column("name", sa.String(length=255), nullable=True))
    op.add_column("users", sa.Column("phone", sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "phone")
    op.drop_column("users", "name")
    op.drop_table("event_ticket_types")
    op.drop_table("event_pictures")
    op.drop_table("events")
    # ### end Alembic commands ###
